// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebService.Entities;

#nullable disable

namespace WebService.Entities.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebService.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("FirstName", "SurName")
                        .IsUnique();

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("WebService.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("WebService.Entities.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EducationLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EducationLevel")
                        .IsUnique();

                    b.HasIndex("MaterialId");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("WebService.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("LanguageId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("WebService.Entities.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("WebService.Entities.ProgrammingLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProgrammingLanguages");
                });

            modelBuilder.Entity("WebService.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("WebService.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("WebService.Entities.Author", b =>
                {
                    b.HasOne("WebService.Entities.Material", null)
                        .WithMany("Authors")
                        .HasForeignKey("MaterialId");
                });

            modelBuilder.Entity("WebService.Entities.Level", b =>
                {
                    b.HasOne("WebService.Entities.Material", null)
                        .WithMany("Levels")
                        .HasForeignKey("MaterialId");
                });

            modelBuilder.Entity("WebService.Entities.Material", b =>
                {
                    b.HasOne("WebService.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("WebService.Entities.Media", b =>
                {
                    b.HasOne("WebService.Entities.Material", null)
                        .WithMany("Medias")
                        .HasForeignKey("MaterialId");
                });

            modelBuilder.Entity("WebService.Entities.ProgrammingLanguage", b =>
                {
                    b.HasOne("WebService.Entities.Material", null)
                        .WithMany("ProgrammingLanguages")
                        .HasForeignKey("MaterialId");
                });

            modelBuilder.Entity("WebService.Entities.Rating", b =>
                {
                    b.HasOne("WebService.Entities.Material", null)
                        .WithMany("Ratings")
                        .HasForeignKey("MaterialId");
                });

            modelBuilder.Entity("WebService.Entities.Tag", b =>
                {
                    b.HasOne("WebService.Entities.Material", null)
                        .WithMany("Tags")
                        .HasForeignKey("MaterialId");
                });

            modelBuilder.Entity("WebService.Entities.Material", b =>
                {
                    b.Navigation("Authors");

                    b.Navigation("Levels");

                    b.Navigation("Medias");

                    b.Navigation("ProgrammingLanguages");

                    b.Navigation("Ratings");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
