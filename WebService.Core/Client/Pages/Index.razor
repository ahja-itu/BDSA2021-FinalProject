@page "/"

<PageTitle>Index</PageTitle>

<h1 style="text-align: center; color:#ffffff" >Bridge The Gap!</h1>
<div class="row">
    <div class="col d-flex justify-content-center align-item-center" style="width:100%">
            <RadzenTextBox @bind-Value=@SearchInput Placeholder="HelloWorld!" Style="width:100%"/>
            <RadzenButton Click="Search" Icon="search" Style="background-color:transparent;color:#7765E3;"/>  
    </div>
</div>
<div id="filters" class="row" style="display: @displayValue;margin-left:20px;margin-right:20px;background:#4E4E4E;border-radius: 24px;margin-top:15px;padding:25px">
    <div class="col" data-toggle="buttons">
        <RadzenButton Click=@(args => ChangeFilter(filters.tags,"tags")) Style="border-radius: 24px; background: #ffffff;margin:10px;color:#7765E3" Text="Tags"/>
        <RadzenButton Click=@(args => ChangeFilter(filters.category,"categories")) Style="border-radius: 24px; background: #ffffff;margin:10px;color:#7765E3" Text="Categories"/>
        <RadzenButton Click=@(args => ChangeFilter(filters.rating,"ratings")) Style="border-radius: 24px; background: #ffffff;margin:10px;color:#7765E3" Text="Ratings"/>
        <RadzenButton Click=@(args => ChangeFilter(filters.level,"levels")) Style="border-radius: 24px; background: #ffffff;margin:10px;color:#7765E3" Text="Levels"/>
        <RadzenButton Click=@(args => ChangeFilter(filters.programlang,"programing languages")) Style="border-radius: 24px; background: #ffffff;margin:10px;color:#7765E3" Text="Programing Lang"/>
        <RadzenButton Click=@(args => ChangeFilter(filters.lang,"languages")) Style="border-radius: 24px; background: #ffffff;margin:10px;color:#7765E3" Text="Language"/>
        <RadzenButton Click=@(args => ChangeFilter(filters.media,"medias")) Style="border-radius: 24px; background: #ffffff;margin:10px;color:#7765E3" Text="Media"/>
    </div>
    <div class="row" style="display:@displayFilterSearchValue">
        <div class="col">
            <RadzenTextBox Change="SearchFilters" @bind-Value=@FilterSearchInput Placeholder="@placeholder" Style="width:100px"/>
            <RadzenButton Click="SearchFilters" Icon="search" Style="background-color:transparent;color:#7765E3;"/> 
        </div>
        
    </div>
    <div class="row" style="display:@displayRatingSliderValue">
        <h3 style="margin-top: 2rem">Range Slider</h3>
        <RadzenSlider Range="true" @bind-Value=@ratingValues TValue="IEnumerable<int>" Min="1" Max="10"/>
    </div>
    <div class="row" style="display:@displayFiltersValue">
        <RadzenDataGrid AllowFiltering="false" AllowColumnResize="false" Data="@filtersToShow" TItem="string" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
        <Columns>
            <RadzenDataGridColumn TItem="string" Property="value" Filterable="false" Title="ID" Frozen="true" Width="70px" TextAlign="TextAlign.Center" />
        </Columns>
    </RadzenDataGrid>
    </div>
</div>
<div class="row">
    <RadzenButton Click="ShowFilters" Icon="@displayIcon" Style="background-color:transparent;color:#7765E3;width:25px;"/>
</div>

@code{
    enum filters {
        tags, category, rating, level, programlang, lang, media
    }

    private class filterObejct{
        public string Name { get; set; }
    }

    string placeholder = "Search tags";
    string SearchInput;
    string displayValue = "none";
    bool showingFilters = false;
    string displayFilterSearchValue = "block";
    string displayFiltersValue = "block";
    string displayRatingSliderValue = "none";
    string displayIcon = "expand_more";
    IList<string> allFilters;
    IList<string> filtersToShow = new List<string>();
    IEnumerable<int> ratingValues;
    string FilterSearchInput;

    private void SearchFilters()
    {
        filtersToShow.Clear();
        foreach (var str in allFilters)
        {
            if (str.Contains(FilterSearchInput))
            {
                filtersToShow.Add(str);
            }
        }
    }


    private void Search()
    {
        System.Console.WriteLine(SearchInput);
    }
    private void ShowFilters()
    {
        if (!showingFilters) { 
            displayValue = "block";
            displayIcon = "expand_less";
        }
        else { 
            displayValue = "none";
            displayIcon = "expand_more";
        }
        showingFilters = !showingFilters;
    }

    private void ChangeFilter(filters type,string filterName)
    {
        placeholder = "Search " + filterName;
        if (type != filters.rating)
        {
            displayRatingSliderValue = "none";
            displayFiltersValue = "block";
            switch (type)
            {
                case filters.tags:
                    allFilters = new string[] {"tag 1", "tag 2","tag 3","tag 4","tag 5","tag 6","tag 7","tag 8","tag 9","tag 10", "tag 11"};
                    break;
                case filters.category:
                    allFilters = new string[] {"category 1", "category 2","category 3","category 4","category 5","category 6","category 7","category 8","category 9"};
                    break;
                case filters.level:
                    allFilters = new string[] {"level 1", "level 2","level 3","level 4","level 5","level 6","level 7","level 8","level 9"};
                    break;
                case filters.programlang:
                    allFilters = new string[] {"programlang 1", "programlang 2","programlang 3","programlang 4","programlang 5","programlang 6","programlang 7","programlang 8","programlang 9"};
                    break;
                case filters.lang:
                    allFilters = new string[] {"lang 1", "lang 2","lang 3","lang 4","lang 5","lang 6","lang 7","lang 8","lang 9"};
                    break;
                case filters.media:
                    allFilters = new string[] {"media 1", "media 2","media 3","media 4","media 5","media 6","media 7","media 8","media 9"};
                    break;
            }
            ShowFilterSearchField(allFilters.Count());
        }
        else
        {
            displayFiltersValue = "none";
            displayFilterSearchValue = "none";
            displayRatingSliderValue = "block";

        }


    }
    private void ShowFilterSearchField(int length)
    {
        if (length > 10) { 
            displayFilterSearchValue = "block";
        }
        else { 
            displayFilterSearchValue = "none";
            filtersToShow.Clear();
            filtersToShow = allFilters;
        }
    }


}
